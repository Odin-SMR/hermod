#!/usr/bin/python

import MySQLdb
import sys
import shutil
import os

def usage():
    print """
    odinlaunch
    
    odinlaunch starts processing of l1b files to l2 files. If the l1b-files
    exist in our system.

    If they don't exist put new l1b-files in the /odin/smr/spool - directory.

    odinlaunch (start|list) orbit1 orbit2 freqmode version
        start - execute process
        list  - list orbits that mathes the search
    
    examples:
        odinlaunch list 5C52 5C59 SM_AC2ab 1-3
        odinlaunch start 5C52 5C59 SM_AC2ab 1-3
"""
                  
def main():
    matdir = "/odin/smr/Data/SMRl2/SMRmat"
    hdfdir = "/odin/smr/Data/SMR/2/SMRhdf"
    a=0
    for i in sys.argv:
        a=a+1
        
    if a!=6:
        usage()
        sys.exit(str(a)+" :Not correct number of parameters")

    command=sys.argv[1]
    orbit1=sys.argv[2]
    orbit2=sys.argv[3]
    freq=sys.argv[4]
    ver=sys.argv[5]

    #Connect to database
    db=MySQLdb.connect(host="localhost",user="odinuser",passwd="***REMOVED***",db="odin")
    c=db.cursor()
    
    #find parameters in the database (Freqmodes,Currentversions)
    cc=c.execute("""select freqmode,calibration,prefix,midfreq,l2prefix,l2p from Freqmodes,Currentversions where name=%s and qsmr=%s""" ,(freq,ver))
    r=c.fetchone()
    if cc!=1:
        sys.exit("error resolving freqmode")
    else:
        fqnr = r[0]
        cal = r[1]
        prefix = r[2]
    
    #find orbit in the database (Freqmodes,Currentversions)
    cc=c.execute("""select distinct hex(orbit) from scans where freqmode=%s and hex(orbit)>=%s and hex(orbit)<=%s and calibration=%s""" ,(fqnr,orbit1,orbit2,cal))
    for i in range(cc):
        o=c.fetchone()
        if command=="list":
            print o[0]
    
        if command=="start":
            comrm1 = "rm -f %s/Qsmr-%s/%s/%s%s.*" %(matdir,ver,freq,prefix,o[0])
            comrm2 = "rm -f %s/Qsmr-%s/%s/SCH_%s_%s%s_%s.*" %(hdfdir,ver,freq,r[3],r[4],o[0],str(r[5]).zfill(3))
            com =   "cd ~/logs && echo \"~/bin/odinrun_Qsmr-%s %s %d %s\" | qsub -qstratos -z -l walltime=24:0:0 -N %s.%s.%s" % (ver,o[0],cal,freq,freq,o[0],ver)
            #print com
            os.system(comrm1)
            os.system(comrm2)
            os.system(com)
   
if __name__ == "__main__":
    main()
